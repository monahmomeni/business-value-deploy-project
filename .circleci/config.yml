version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.7.2
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip==19.1.1

fetch_data: &fetch_data
  run:
    name: Set script permissions and fetch data
    command: |
      source venv/bin/activate
      chmod +x ./scripts/fetch_kaggle_dataset.sh
      ./scripts/fetch_kaggle_dataset.sh

jobs:
  test_lr_customer_value:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install -r packages/lr_customer_value/requirements.txt
      - *fetch_data
      - run:
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/lr_customer_value/ python3 packages/lr_customer_value/lr_customer_value/train_pipeline.py
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            py.test -vv packages/lr_customer_value/tests

  test_ml_api:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - py-deps-{{ checksum "packages/ml_api/requirements.txt" }}
      - run:
          name: Runnning tests
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip==19.1.1
            pip install -r packages/ml_api/requirements.txt
            py.test -vv packages/ml_api/tests
      - save_cache:
          key: py-deps-{{ checksum "packages/ml_api/requirements.txt" }}
          paths:
            - "/venv"

  train_and_upload_customer_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install -r packages/lr_customer_value/requirements.txt
      - *fetch_data
      - run:
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/lr_customer_value python3 packages/lr_customer_value/lr_customer_value/train_pipeline.py
      - run:
          name: Publish model to Gemfury
          command: |
            . venv/bin/activate
            chmod +x ./scripts/publish_model.sh
            ./scripts/publish_model.sh ./packages/lr_customer_value/

workflows:
  version: 2
  test_all:
    jobs:
      - test_lr_customer_value
      - test_ml_api
      - train_and_upload_customer_model
      - test_ml_api:
          requires:
            - train_and_upload_customer_model
  #        filters:
  #          branches:
  #            only:
  #              - main

